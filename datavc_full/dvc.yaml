stages:
  create_dirs:
    cmd: mkdir -p -v data/ output/ model_output/
    desc: "Create directories for data, output, and model_output" 
  install:
    cmd: |
      pip install --upgrade pip
      pip install -r requirements.txt
    desc: "Upgrade pip and install dependencies"
    deps:
      - requirements.txt
  import_data:
    cmd: ./import_data.sh
    desc: "Import data from kaggle"
  clean_data:
    cmd: |
         python3 cleandata.py load_data --file_path data/original_data/insurance.csv
         python3 cleandata.py summary --file_path data/original_data/insurance.csv
         python3 cleandata.py check_missing --file_path data/original_data/insurance.csv
         python3 cleandata.py check_duplicate --file_path data/original_data/insurance.csv
         python3 cleandata.py encode_data --file_path data/original_data/insurance.csv --version 000
    desc: "Loads the data, does summary statistics, checks for missing values, duplicates and encodes data into a numerical form."
    deps:
      - import_data.sh
      - cleandata.py
      - data/original_data/insurance.csv
    outs:
      - data/transform/insurance_000.parquet
  eda:
    cmd: python3 eda.py --input data/transform/insurance_000.parquet --output output/eda_combined_plots.png
    desc: "Perform exploratory data analysis to get better understanding of your data."
    deps:
      - cleandata.py
      - eda.py
    plots:
      - output/eda_combined_plots.png
  split_data:
    cmd: python3 split_data.py --data data/transform/insurance_000.parquet
    desc: "Split the data into training and testing sets using train_test_split strategies."
    deps:
      - eda.py
      - split_data.py
      - data/transform/insurance_000.parquet
    params:
      - split_data.strategy
      - split_data.test_size
  hp_tune:
    cmd: python3 hp_tuning.py
    desc: "Hyperparameter tuning for DecisionTreeRegressor and PolynomialFeatures + LinearRegression using hp_config.json."
    deps:
      - hp_config.json
      - hp_tuning.py
      - data/transform/insurance_000.parquet
    outs:
      - model_output/hp_tuning_results_decision_tree.md:
          cache: false
      - model_output/hp_tuning_results_poly_linear.md:
          cache: false
      - model_output/rfc_best_params_decision_tree.json:
          cache: false
      - model_output/hp_best_params_poly_linear.json:
          cache: false
  evaluate_model:
    cmd: python3 evaluate.py
    desc: "Evaluate the model using linear regression, Polynomial regression and Decision tree regression."
    deps:
      - split_data.py
      - evaluate.py
      - data/transform/insurance_000.parquet
    metrics:
      - metrics.json:
         cache: false
    outs:
      - model/linear_model_scaled.mlem
      - model/tree_model.mlem
      - model_output/decision_tree.png
      - model_output/residual_plot_tree_model.png
      - model_output/residual_plot_linear_model.png
      - model_output/feature_importance_tree.png
      - model_output/predictions_tree_model.md
      - model_output/predictions_poly_linear_model.md
  send_message:
    cmd: python3 send_metrics.py
    desc: "Send model metrics via SMS"
    deps:
      - metrics.json
      - send_metrics.py
      - send_sms.py
